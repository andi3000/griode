#!/usr/bin/perl -w
use strict;
use IPC::Open2;
use Fcntl;
use Symbol 'gensym'; # vivify a separate handle for STDERR
use File::Spec;

# Set up effects in mod-host
my $port = 5555;

# Start up a `nc 127.0.0.1 $port ` and send commands to it

# Pass file name on command line that holds commands
my $command_fn = shift or die "No file name passed";
-r $command_fn or die "$!: Cannot read file: $command_fn";
open(my $in, $command_fn) or die "$!: Cannot open $command_fn";
my @commands = <$in>;
close($in);

#my $pid = open(my $nc, "|-", "/usr/bin/nc localhost $port") or die $!;
foreach my $cmd (@commands){
    my $pid = open2(my $child_out, my $child_in, "/usr/bin/nc localhost $port");
    defined $pid or die "$!: Fork failed";

    # # Set $child_out to non blocking 
    # my $flags = '';
    # $flags = fcntl($child_out, F_GETFL, $flags) or die $!;
    # $flags |= O_NONBLOCK;
    # fcntl($child_out, F_SETFL, $flags);
    
    print "Sending command: $cmd";
    print $child_in $cmd;

    # my $rin = '';
    # vec($rin, fileno($child_out),  1) = 1;
    # my $nfound =
    # 	select(my $rout = $rin, my $wout = '', my $eout = '', undef);

    # print "Found: $nfound \n";
    my $res = '';
    while(1){
	read($child_out, $res, 1);
	if($res eq "\n"){
	    last;
	}
	if(ord($res) == 0){
	    last;
	}
	print $res;
    }
    print "\n";
    
    kill 'HUP' , $pid;
}
